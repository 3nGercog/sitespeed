<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    @Styles.Render("~/Content/css")
    @Styles.Render("~/bundles/jsxcss")
    @Scripts.Render("~/bundles/modernizr")
    @Scripts.Render("~/bundles/jsxjs")

</head>
<body>
        <div class="progress">
            <div class="progress-bar" role="progressbar" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100" style="width:100%">
                <span class="sr-only">70% Complete</span>
            </div>
        </div>
        <div class="container body-content">
            <form id="uriHtml5Form" name="formsub" class="form-horizontal" action="/Home/Create" method="post">

                <div class="form-group">
                    <label class="col-xs-3 control-label">Your website</label>
                    <div class="col-xs-6">
                        <input class="form-control" name="website"
                               type="url"/>
                    </div>
                    <div class="col-xs-3">
                        <input type="submit" class="btn btn-info form-control" value="Submit">
                    </div>
                </div>
            </form>
        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year - SiteSpeed</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)
    <script type="text/javascript">
        function getRandomColor() {
            var letters = '0123456789ABCDEF';
            var color = '#';
            for (var i = 0; i < 6; i++ ) {
                color += letters[Math.floor(Math.random() * 16)];
            }
            return color;
        }
        function splitTo( arr, n) {
            var plen = Math.ceil(arr.length / n);

            return arr.reduce( function( p, c, i, a) {
                if(i%plen === 0) p.push({});
                p[p.length-1][i] = c;
                return p;
            }, []);
        }
        function compareMyArr(a, b){
            if (a.Number > b.Number) return 1;
            if (a.Number < b.Number) return -1;
        }
        function creareCharts() {
            var arr = @Html.Raw(Json.Encode(ViewData.Model));

            if(!arr || arr.length === 0){
                $('#box').removeClass('jxgbox');
                return;
            }
            // get random color
            //create text
            //create graf
            var board = JXG.JSXGraph.initBoard('box', { boundingbox: [-1, 10, 10, -1], axis: true });
            var dataArr = [4, 1, 3, 2, 5, 7, 1.5, 2];
            var dataArr2 = [3, 2, 3, 2, 6, 9, 3.5, 4];
            JXG.JSXGraph.freeBoard(board);
            board = JXG.JSXGraph.initBoard('box', { boundingbox: [-1, 5, 11, -1], axis: true });
            board.suspendUpdate();
            var arrData = [];
            var ind = 0;
            var colS = arr.length / 5;
            var res = colS === 1 ? arr : splitTo(arr, colS);
            var sortArr = [];
            if(colS === 1){
                var col = getRandomColor();
                for (var i = 0; i < res.length; i++) {
                    for (var n = 0; n < res.length; n++) {
                        if(res[i].Number === res[n].Number){
                            sortArr.push(parseFloat(res[n].Time));
                        }
                    }
                }
                var a = board.create('chart', sortArr, { chartStyle: 'line, point', strokeWidth: 1, name: 'name 1', strokeColor: col });
            }
            else{
                var col; var b;
                for (var i = 0; i < res.length; i++) {
                    //console.log(res[i]);
                    $.each(res[i], function(ind, val){
                        $.each(res[i], function(i,v){
                            if(val.Number === v.Number){
                                sortArr.push(parseFloat(v.Time));
                            }
                        });
                    });
                    col = getRandomColor();
                    b = board.create('chart', sortArr, { chartStyle: 'line, point', strokeWidth: 1, name: 'name 1', strokeColor: col });
                    sortArr = [];
                }
            }
           
            board.unsuspendUpdate();
        }
        creareCharts();
    </script>
    <script>
        $(document).ready(function () {
            $('form[name="submit"]').validate({
                rules: {
                    website: {
                        url: true,
                        required: true,
                        minlength: 5
                    }
                },
                submitHandler: function(form) {
                    form.submit();
                }
            });
        });
        //$(document).on('click', 'input[type="submit"]', function () {
        //    console.log('sub bt');
            
        //});
    </script>
</body>
</html>
